@model backend.Models.Atividade 

@{
    ViewData["Title"] = "Atividade";
    Layout = "~/Views/Shared/_Layout.cshtml";

   var questaoIndex = ViewBag.QuestaoIndex != null ? (int)ViewBag.QuestaoIndex : 0;
var questoes = Model.Questoes.OrderBy(q => q.Id).ToList();
var questao = questoes.Skip(questaoIndex).FirstOrDefault();

}

<div class="card p-4 shadow-lg">
  <h2 class="text-primary">@Model.Titulo</h2>
  <p>@Model.Descricao</p>

  <ul>
    <li><strong>Faixa etária:</strong> @Model.FaixaEtaria</li>
    <li><strong>Categoria:</strong> @Model.Categoria</li>
  </ul>

  <hr />

  @if (questao != null)
  {
      <div id="questao-container" class="mb-4">
          <h5>@questao.Pergunta</h5>
          <div>
              @foreach (var alt in questao.Alternativas)
              {
                  <button class="btn btn-outline-primary m-1 alternativa-btn" 
                          data-correta="@alt.Correta.ToString()" 
                          data-atividade-id="@Model.Id"
                          data-questao-index="@questaoIndex">
                      @alt.Texto
                  </button>
              }
          </div>
      </div>
  }
  else
  {
      <!-- Popup final -->
      <div class="text-center">
          <h3>🎉 Parabéns! Você concluiu esta atividade!</h3>
          <button class="btn btn-primary mt-3" data-bs-toggle="modal" data-bs-target="#celebrationModal">
              Ver comemoração →
          </button>
      </div>
  }

  <div id="feedback" class="alert d-none mt-3"></div>

  <a href="/Home/CriancaDashboard" class="btn btn-secondary mt-3">Voltar</a>
</div>

<!-- Modal de comemoração -->
<div class="modal fade" id="celebrationModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content text-center p-3">
      <div class="modal-body">
        <h3>🎉 Parabéns!</h3>
        <p>Você concluiu esta atividade e ganhou pontos!</p>
        <div id="confetti-container" style="pointer-events:none;"></div>
        <a asp-action="Proxima" asp-route-id="@Model.Id" class="btn btn-success mt-3">
          Próxima Atividade →
        </a>
      </div>
    </div>
  </div>
</div>

@section Scripts {
<script>
  (function(){
    const atividadeId = @Model.Id;
    const desempenhoAcerto = 100;

    function showFeedback(success, text) {
      const feedback = document.getElementById('feedback');
      feedback.classList.remove('d-none', 'alert-success', 'alert-danger');
      feedback.classList.add('alert', success ? 'alert-success' : 'alert-danger');
      feedback.innerText = text;
      setTimeout(() => feedback.classList.add('d-none'), 2000);
    }

    document.querySelectorAll('.alternativa-btn').forEach(btn => {
      btn.addEventListener('click', async function() {
        const correta = this.dataset.correta.toLowerCase() === "true";
        const questaoIndex = parseInt(this.dataset.questaoIndex);

        if (correta) {
          showFeedback(true, "🎉 Você acertou!");

          // registra resposta
          try {
            await fetch('/api/respostas', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({
                CriancaId: 0, // ajuste depois
                AtividadeId: atividadeId,
                Desempenho: desempenhoAcerto
              })
            });
          } catch (err) {
            console.error('Erro registrando resposta:', err);
          }

          // vai para próxima questão
          setTimeout(() => {
          window.location.href = `/AtividadeMvc/Detalhe/${atividadeId}?questaoIndex=${questaoIndex + 1}`;

          }, 1000);

        } else {
          showFeedback(false, "❌ Ops! Tente novamente!");
        }
      });
    });
  })();
</script>
}
